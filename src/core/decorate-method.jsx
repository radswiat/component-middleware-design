/** * Apply decorator for a method * - allows us to define decorator for a class, that could still bind into the inernal methods * @param classVar * @param method */const decMethod = (decorator, method, classVar, methodName) => {  let descriptor = {    value: classVar.prototype[methodName],    enumerable: false,    enumerable: true,    writable: true  }  descriptor = method(classVar.prototype, methodName, descriptor);  Object.defineProperty(classVar.prototype, methodName, descriptor);  Object.defineProperty(decorator.prototype, methodName, descriptor);}export default decMethod;